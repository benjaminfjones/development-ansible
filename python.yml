# Install python3 toolchain

- name: Install python build dependencies
  ansible.builtin.apt:
    name:
      - make
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - wget
      - curl
      - llvm
      - libncursesw5-dev
      - xz-utils
      - tk-dev
      - libxml2-dev
      - libxmlsec1-dev
      - libffi-dev
      - liblzma-dev
  become: true
  become_user: root

- name: Install python3 toolchain
  ansible.builtin.apt:
    name:
      - python3
      - python3-venv
      - python3-pip
    state: present
  become: true
  become_user: root

# Pyenv

- name: Install pyenv
  ansible.builtin.git:
    repo: 'https://github.com/pyenv/pyenv'
    dest: ~/.pyenv
    version: v2.3.13

- name: Install pyenv python
  ansible.builtin.command:
    cmd: ~/.pyenv/bin/pyenv install 3.11.2
  args:
    creates: ~/.pyenv/shims/python

- name: Make pyenv python globally available
  ansible.builtin.command:
    cmd: ~/.pyenv/bin/pyenv global 3.11.2

- name: Add pyenv shell environment config
  ansible.builtin.shell: |
    echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zprofile
    echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zprofile
    echo 'eval "$(pyenv init --path)"' >> ~/.zprofile
  args:
    creates: ~/.zprofile

# Poetry

- name: Fetch Poetry installer
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/python-poetry/install.python-poetry.org/main/install-poetry.py
    dest: /tmp/install-poetry.py
    mode: u=rw,g=r,o=r

- name: Install Poetry
  ansible.builtin.command:
    cmd: ~/.pyenv/shims/python /tmp/install-poetry.py
  args:
    creates: ~/.poetry/bin/poetry

# pipx

- name: Install pipx
  ansible.builtin.command:
    cmd: ~/.pyenv/shims/pip install pipx
  args:
    creates: ~/.pyenv/shims/pipx

- name: Install python tools using pipx
  block:
    - name: "Install {{ item }}"
      ansible.builtin.command: ~/.pyenv/shims/pipx install "{{ item }}"

      args:
        creates: "~/.local/bin/{{ item }}"
      loop:
        - black
        - isort
        - pre-commit
        # - cuvner  # TODO: installs as ~/.local/bin/cuv
